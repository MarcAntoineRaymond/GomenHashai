name: Publish Docker image

on:
  push:
    branches: [ "main" ]
    tags:
      - 'v*'
  pull_request:
    branches: [ "main" ]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

permissions:  # added using https://github.com/step-security/secure-repo
  contents: read

jobs:
  build-and-push-image:
    runs-on: ubuntu-latest

    permissions:
      contents: write
      packages: write
      attestations: write
      id-token: write
      pull-requests: write

    steps:
      - name: Harden the runner (Audit all outbound calls)
        uses: step-security/harden-runner@ec9f2d5744a09debf3a187a3f4f675c53b671911 # v2.13.0
        with:
          egress-policy: audit

      - name: Checkout repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Log in to the Container registry
        uses: docker/login-action@3d100841f68d4548bf57e52eb27bd33ec5069f55
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@be19121bfd18b9c1ac415d9571d4f67b9b357886
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Build and push Docker image
        id: push
        uses: docker/build-push-action@263435318d21b8e681c14492fe198d362a7d2c83 # v6.18.0
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: Generate artifact attestation
        id: attest
        uses: actions/attest-build-provenance@e8998f949152b193b063cb0ec769d69d929409be # v2.4.0
        with:
          subject-name: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME}}
          subject-digest: ${{ steps.push.outputs.digest }}
          push-to-registry: true

      - name: Extract Docker tag from Git ref
        if: github.ref_type == 'tag'
        id: extract_tag
        run: |
          TAG_NAME="${GITHUB_REF#refs/tags/}"
          echo "tag=$TAG_NAME" >> $GITHUB_OUTPUT

      - name: Update Chart.yaml appVersion
        if: github.ref_type == 'tag'
        run: |
          sed -i "s/^appVersion:.*/appVersion: \"${TAG}\"/" deploy/charts/gomenhashai/Chart.yaml
          sed -i "s|^\([[:space:]]*digest:\).*|\1 \"${DIGEST}\"|" deploy/charts/gomenhashai/values.yaml
        env:
          TAG: ${{ steps.extract_tag.outputs.tag }}
          DIGEST: ${{ steps.push.outputs.digest }}

      # Create a Pull Request
      - name: Create Pull Request
        if: github.ref_type == 'tag'
        uses: peter-evans/create-pull-request@271a8d0340265f705b14b6d32b9829c1cb33d45e # v7.0.8
        with:
          branch: update-chart-version-${{ steps.extract_tag.outputs.tag }}
          commit-message: Update appVersion to ${{ steps.extract_tag.outputs.tag }}
          delete-branch: true
          base: main
          title: "chore: update appVersion to ${{ steps.extract_tag.outputs.tag }}"
          body: |
            This PR updates the Helm chart appVersion to match the published Docker tag `${{ steps.extract_tag.outputs.tag }}` and also update the digest.

      - name: Prepare sigstore and in-toto bundle
        if: github.ref_type == 'tag'
        id: prep_attestation
        env:
          BUNDLE: ${{ steps.attest.outputs.bundle-path }}
        run: |
          NAME="${{ runner.temp }}/$(basename ${{ env.IMAGE_NAME}}-${{ steps.extract_tag.outputs.tag }})"
          echo "name=$NAME" >> $GITHUB_OUTPUT
          mv "$BUNDLE" "${NAME}.sigstore"
          if ! jq -e '.dsseEnvelope' "${NAME}.sigstore" > /dev/null; then
            echo "❌ Error: No 'dsseEnvelope' found in ${NAME}.sigstore"
            exit 1
          fi

          jq -c '.dsseEnvelope' "${NAME}.sigstore" > "${NAME}.intoto.jsonl"
          echo "✅ Extracted dsseEnvelope to ${NAME}.intoto.jsonl"

      # Upload attestations
      - name: Upload attestations to release
        uses: svenstaro/upload-release-action@81c65b7cd4de9b2570615ce3aad67a41de5b1a13 # v2
        if: github.ref_type == 'tag'
        with:
          file: ${{ steps.prep_attestation.outputs.name }}.*
          file_glob: true
